Parsing ...
exp ::= NUMBER
ConstDef ::= ID EQ Exp
MultiConstDecl ::= ConstDef
Decl ::= ConstDecl
Var ::= ID
MultiVar ::= Var
Var ::= ID
MultiVar ::= MultiVar , Var
Var ::= ID
MultiVar ::= MultiVar , Var
Var ::= ID
MultiVar ::= MultiVar , Var
Var ::= ID
MultiVar ::= MultiVar , Var
VarDecl ::= int MultiVar ;
Decl ::= VarDecl
BlockItem ::= Decl 
Block ::= BlockItem
Stmt ::= ID(
BlockItem ::= Stmt
BlockItem ::= MultiBlockItem BlockItem
LVal ::= ID
exp ::= LVal
exp ::= NUMBER
Cond ::= exp > exp
IFCOND ::= IF (Cond
LVal ::= ID
exp ::= NUMBER
Stmt ::= LVal EQ Exp ;
LVal ::= ID
exp ::= NUMBER
Stmt ::= LVal EQ Exp ;
Matched ::= IFCOND Stmt ELSE Stmt
IFStmt ::= Matched
Stmt ::= IFStmt
BlockItem ::= Stmt
BlockItem ::= MultiBlockItem BlockItem
LVal ::= ID
exp ::= LVal
LVal ::= ID
exp ::= LVal
exp ::= exp MOD exp
exp ::= NUMBER
Cond ::= exp != exp
WHILECOND ::= while(cond
LVal ::= ID
LVal ::= ID
exp ::= LVal
Stmt ::= LVal EQ Exp ;
BlockItem ::= Stmt
Block ::= BlockItem
LVal ::= ID
LVal ::= ID
exp ::= LVal
Stmt ::= LVal EQ Exp ;
BlockItem ::= Stmt
BlockItem ::= MultiBlockItem BlockItem
LVal ::= ID
LVal ::= ID
exp ::= LVal
LVal ::= ID
exp ::= LVal
exp ::= exp MOD exp
Stmt ::= LVal EQ Exp ;
BlockItem ::= Stmt
BlockItem ::= MultiBlockItem BlockItem
Block ::= { MultiBlockItem }
Stmt ::= Block
Stmt ::= WHILECOND Stmt
Stmt ::= WHILEStmt
BlockItem ::= Stmt
BlockItem ::= MultiBlockItem BlockItem
Var ::= ID
MultiVar ::= Var
VarDecl ::= int MultiVar ;
Decl ::= VarDecl
BlockItem ::= Decl 
BlockItem ::= MultiBlockItem BlockItem
LVal ::= ID
exp ::= NUMBER
exp ::= NUMBER
exp ::= exp PLUS exp
exp ::= ( exp 
exp ::= ( exp 
exp ::= ( exp )
Stmt ::= LVal EQ Exp ;
BlockItem ::= Stmt
BlockItem ::= MultiBlockItem BlockItem
LVal ::= ID
exp ::= NUMBER
exp ::= NUMBER
exp ::= exp exp
exp ::= exp )
exp ::= exp )
exp ::= ( exp )
Stmt ::= LVal EQ Exp ;
BlockItem ::= Stmt
BlockItem ::= MultiBlockItem BlockItem
LVal ::= ID
LVal ::= ID
exp ::= LVal
LVal ::= ID
exp ::= LVal
exp ::= exp exp
LVal ::= ID
exp ::= LVal
exp ::= exp PLUS exp
Stmt ::= LVal EQ Exp ;
BlockItem ::= Stmt
BlockItem ::= MultiBlockItem BlockItem
LVal ::= ID
exp ::= NUMBER
exp ::= NUMBER
exp ::= NUMBER
exp ::= exp MULT exp
exp ::= exp PLUS exp
Stmt ::= LVal EQ Exp ;
BlockItem ::= Stmt
BlockItem ::= MultiBlockItem BlockItem
Block ::= { MultiBlockItem }
FuncDef ::= void ID() Block
CompUnit ::= Decl FuncDef

Found 1 warnings at least:
[1;31;40mWarning[0m in file [1;33;40mtest/gcd.c[0m @(1, 7): missing variable type.
a = 1;      [1;34;40m^[0m
